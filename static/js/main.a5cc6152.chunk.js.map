{"version":3,"sources":["Components/App.tsx","index.tsx","icons/user.svg","icons/lobby.svg","icons/password.svg","icons/question.svg"],"names":["socket","darkTheme","createMuiTheme","palette","type","App","useState","lobbyName","setLobbyName","username","setUserName","password","setPassword","playerInLobby","setPlayerInLobby","error","setError","errorText","setErrorText","gameOwner","setGameOwner","gameMembers","setGameMembers","gameWaitingRoom","setGameWaitingRoom","currentQuestion","setCurrentQuestion","questionAnswer","setQuestionAnswer","Boolean","gameInProgress","setGameInProgress","gameAnswers","setGameAnswers","questionIndex","setQuestionIndex","message","lobbyError","setLobbyError","usernameError","setUserNameError","passwordError","setPasswordError","showJoin","setShowJoin","showCreate","setShowCreate","showFields","setShowFields","useEffect","a","io","console","log","on","response","joined","members","waitingRoom","gameStarted","question","questionTable","map","i","answers","j","undefined","answer","setTimeout","setupSocket","window","addEventListener","innerWidth","location","hash","disconnectFromGame","hideCreateJoin","createGame","length","createGameCredentials","emit","joinGame","submitAnswer","ThemeProvider","theme","className","style","width","Fragment","TextField","autoComplete","required","color","variant","id","onChange","e","target","value","onKeyDown","keyCode","handleEnterSubmit","Button","margin","onClick","startGame","member","src","avatar","QuestionIcon","UserIcon","LobbyIcon","PasswordIcon","fontSize","minHeight","opacity","transition","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a5cc6152.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {TextField, Button, Fab } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport io from 'socket.io-client';\nimport UserIcon from '../icons/user.svg';\nimport LobbyIcon from '../icons/lobby.svg';\nimport PasswordIcon from '../icons/password.svg';\nimport QuestionIcon from '../icons/question.svg';\nimport Avatar from 'avataaars';\nimport { randomAvatar } from '../randomav';\nimport { GameMembers } from './types';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\n\nlet socket : SocketIOClient.Socket;\n\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      PORT: string;\n      BASEURL: string;\n    }\n  }\n}\n\nfunction App() {\n  const [lobbyName, setLobbyName] = useState('');\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [playerInLobby, setPlayerInLobby] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n  const [gameOwner, setGameOwner] = useState('');\n  const [gameMembers, setGameMembers] = useState<GameMembers[]>([]);\n  const [gameWaitingRoom, setGameWaitingRoom] = useState<GameMembers[]>([]);\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const [questionAnswer, setQuestionAnswer] = useState('');\n  const [gameInProgress, setGameInProgress] = useState(Boolean);\n  const [gameAnswers, setGameAnswers] = useState<{ question: string, answer: string}[][]>([]);\n  const [questionIndex, setQuestionIndex ]= useState(0);\n\n  const [lobbyError, setLobbyError] = useState({error: false, message: ''});\n  const [usernameError, setUserNameError] = useState({error: false, message: ''});\n  const [passwordError, setPasswordError] = useState({error: false, message: ''});\n\n\n  const [showJoin, setShowJoin] = useState(false);\n  const [showCreate, setShowCreate] = useState(false);\n  const [showFields, setShowFields] = useState(false);\n\n  // Socket listener\n  useEffect(() => {\n    const setupSocket = async () => {\n      socket = io('http://localhost:3005');\n      console.log(socket);\n  \n      \n      // If game created, hide the menu\n      socket.on('gameCreated', (response: {gameOwner: string, joined: boolean, members: GameMembers[]}) => {\n        if (response.joined) {\n          setPlayerInLobby(true);\n          setGameOwner(response.gameOwner);\n          setGameMembers(response.members);\n        }\n      })\n  \n      // on game join\n      socket.on('gameJoined', (response: {gameOwner: string, joined: boolean, members: GameMembers[], waitingRoom: GameMembers[]}) => {\n        if (response.joined) {\n          setPlayerInLobby(true);\n          setGameOwner(response.gameOwner);\n          setGameMembers(response.members)\n          setGameWaitingRoom(response.waitingRoom);\n        }\n      })\n  \n      // when player join update members\n      socket.on('playerJoined', (response : { members: GameMembers[], waitingRoom: GameMembers[]}) => {\n        setGameMembers(response.members);\n        setGameWaitingRoom(response.waitingRoom);\n      });\n  \n      // when game started\n      socket.on('gameStarted', (response: { gameStarted: boolean, question: string, questionIndex: number, members: GameMembers[], waitingRoom: GameMembers[] }) => {\n        setGameInProgress(response.gameStarted)\n        setCurrentQuestion(response.question);\n        setQuestionIndex(response.questionIndex);\n        setGameMembers(response.members);\n        setGameWaitingRoom(response.waitingRoom);\n      })\n  \n      socket.on('allQuestionsAnswered', (response: { question: string, answer: string}[][]) => {\n        console.log('all questions answered!')\n  \n        const questionTable: {question: string, answer: string}[][] = [];\n        response.map((question, i) => {\n          question.map((answers, j) => {\n            if (questionTable[j] === undefined) {\n              questionTable[j] = [];\n            }\n            questionTable[j][i] = {question: answers.question, answer: answers.answer}\n          })\n        })\n  \n        setGameAnswers(questionTable)\n        setGameInProgress(false);\n        setQuestionIndex(0);\n      });\n  \n      socket.on('newQuestion', (response: {question: string, questionIndex: number}) => {\n  \n        setCurrentQuestion(response.question);\n        setQuestionIndex(response.questionIndex);\n      })\n      \n      socket.on('playerLeft', (response : { members: GameMembers[], waitingRoom: GameMembers[]}) => {\n        setGameMembers(response.members);\n        setGameWaitingRoom(response.waitingRoom);\n      })\n\n      socket.on('validationError', (response: {error: string}) => {\n        setError(true);\n        setErrorText(response.error)\n        setTimeout(() => {\n          setError(false);\n        }, 3000);\n      })\n    }\n    setupSocket();\n  }, [])\n\n  // Deal with resize, to fix the garbage css\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth > 1270) {\n        setShowCreate(false);\n        setShowJoin(false);\n        setShowFields(false);\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n  }, []);\n\n  // Deal with hash change, hackfix back button phone\n  useEffect(() => {\n    const handleHashChange = () => {\n      if (window.location.hash === '') {\n        disconnectFromGame();\n        hideCreateJoin();\n      }\n    }\n\n    window.addEventListener('hashchange', handleHashChange);\n  }, []);\n\n  // Helpers for the buttons\n  const createGame = () => {\n    let error = false;\n\n    if (!lobbyName) {\n      setLobbyError({error:true, message: \"Lobby Name cannot be empty\"})\n      error = true;\n    } else {\n      setLobbyError({error:false, message: ''})\n    }\n    if (!username) {\n      setUserNameError({error:true, message: \"Username cannot be empty\"})\n      error = true;\n    } else if (username.length > 12) {\n      setUserNameError({error:true, message: \"Username maximum of 12 characters\"})\n      error = true;\n    } else  {\n      setUserNameError({error:false, message: ''})\n    }\n\n    if (error) {\n      return false;\n    }\n\n    setLobbyError({error: false, message: ''});\n    setUserNameError({error: false, message: ''});\n    setPasswordError({error: false, message: ''});\n    const createGameCredentials = { lobbyName, username, password };\n    console.log('trying')\n    socket.emit('createGame', createGameCredentials)\n    window.location.hash = lobbyName;\n  }\n  \n  const joinGame = () => {\n    let error = false;\n\n    if (!lobbyName) {\n      setLobbyError({error:true, message: \"Lobby Name cannot be empty\"})\n      error = true;\n    } else {\n      setLobbyError({error:false, message: ''})\n    }\n    if (!username) {\n      setUserNameError({error:true, message: \"Username cannot be empty\"})\n      error = true;\n    } else if (username.length > 12) {\n      setUserNameError({error:true, message: \"Username maximum of 12 characters\"})\n      error = true;\n    } {\n      setUserNameError({error:false, message: ''})\n    }\n\n    if (error) {\n      return false;\n    }\n\n    const createGameCredentials = { lobbyName, username, password };\n    socket.emit('joinGame', createGameCredentials)\n    window.location.hash = lobbyName;\n  }\n\n  const startGame = () => {\n    const createGameCredentials = { lobbyName, username };\n    socket.emit('startGame', createGameCredentials)\n  }\n\n  const handleEnterSubmit = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      submitAnswer()\n    }\n  }\n\n  const submitAnswer = () => {\n    if (questionAnswer === '') {\n      setError(true);\n      setErrorText('Answer cannot be empty you silly goose');\n      return false;\n    }\n\n    setError(false);\n    setErrorText('');\n    setQuestionAnswer('');\n    const createGameCredentials = { lobbyName, username, answer: questionAnswer };\n    socket.emit('submitAnswer', createGameCredentials)\n  }\n\n  const disconnectFromGame = () => {\n    socket.emit('leaveGame', {lobbyName})\n  }\n\n  const displayCreate = () => {\n    window.location.hash = '#createGame'\n    setShowCreate(true);\n    setShowFields(true);\n  }\n\n  const displayJoin = () => {\n    window.location.hash = '#joinGame'\n    setShowJoin(true);\n    setShowFields(true);\n  }\n\n  const hideCreateJoin = () => {\n    window.location.hash = ''\n    setShowCreate(false);\n    setShowJoin(false);\n    setShowFields(false);\n  }\n\n  \n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <div style={{width: \"100%\"}}>\n        { playerInLobby &&\n          <div className=\"gameLobby\">\n            { playerInLobby &&\n              <React.Fragment>\n                <div className=\"gameScreen\">\n                  <div className=\"gameScreenHeader\">\n                    <div className=\"gameScreenLogoContainer\">\n                      <div className=\"gameScreenLogo\">?!</div>\n                      Who<br/>What<br/>Where<br/>\n                    </div>\n                    <div className=\"gameScreenRound\">{questionIndex === 0 ? 'Waiting for new game' :'Round' }<br/>{questionIndex !== 0 ? questionIndex : ''}</div>\n                  </div>\n                  <div className=\"gameScreenContainer\">\n                      { (gameOwner !== username && !gameInProgress && playerInLobby) && \n                        <div className=\"waitingText\"> Waiting for {gameOwner} to start the game </div>\n                      }\n                      { (!gameInProgress && gameAnswers[0] !== undefined) &&\n                        <div>\n                          {gameAnswers.map((answer) => {\n                            return (\n                              <div>\n                              {answer.map((a) => {\n                                  return <li>{a.question} - {a.answer}</li>\n                              })}\n                              </div>\n                            )\n                          })}\n                          </div>    \n                      }\n                      { gameInProgress &&\n                        <React.Fragment>\n                          <div className=\"question\">{currentQuestion}</div>\n                          {error && <div>{errorText}</div>}\n                          <div className=\"answerContainer\"> \n                            <TextField autoComplete=\"off\" className=\"answerTextField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setQuestionAnswer(e.target.value) } value={questionAnswer} onKeyDown={(e) => handleEnterSubmit(e)}/>\n                            <Button className=\"submitAnswerButton\" style={{margin: '4px'}} color=\"primary\" onClick={() => submitAnswer()}> Submit </Button>\n                          </div>\n                        </React.Fragment>\n                      }\n                      { (gameOwner !== '' && gameOwner === username && !gameInProgress) && \n                      <div className=\"startButtonContainer\">\n                      <Button className=\"startButton\" color=\"primary\" onClick={() => startGame()}> Start Game </Button>\n                      </div>\n                      }\n                  </div>\n                  <div className=\"gameScreenChatContainer\">\n                    \n                  </div>\n                </div>\n                <div className=\"memberSidebar\">\n                  <div className=\"memberSidebarTitle\">Players - {gameMembers.length}</div>\n                  <div className=\"memberList\">\n                    {gameMembers.map((member) => {\n                      return (\n                        <div className=\"memberItem\"><img className=\"memberAvatar\" src={member.avatar}/>{member.username}</div>\n                      )\n                    })}\n                  </div>\n                  <div className=\"waitingRoomSidebarTitle\">Waiting Room - {gameWaitingRoom.length}</div>\n                  <div className=\"waitingRoomList\">\n                    {gameWaitingRoom.map((member) => {\n                      return (\n                        <div className=\"memberItem\"><img className=\"memberAvatar\" src={member.avatar}/>{member.username}</div>\n                      )\n                    })}\n                  </div>\n                </div>\n              </React.Fragment>\n            }\n          </div>\n        }\n\n        { !playerInLobby &&\n          <div className=\"createOrJoinLobbyContainer\">\n\n            <div className=\"introductionSection\"> \n              <div className=\"introTitleContainer\">\n                <img className=\"introIcon\" src={QuestionIcon} />\n                <div className=\"introTitle\">Who What Where</div>\n              </div>\n              { showFields && <div className=\"dividerSmall\"></div> }\n              { !showFields &&\n              <React.Fragment>\n              <div className=\"introContent\"> \n                An Interactive Story building game to play with friends. <br/><br/>\n                Challenge your friends to a game of Who, What, Where? An Ad-libs inspired interactive story building game \n                where you and your friends answer a series of 9 questions. The answers get mashed together to create wild stories. <br/><br/>\n                <div className=\"extraPlayerText\">Best played with 3-9 players </div>\n              </div>\n              <div className=\"divider\"></div>\n              </React.Fragment>\n              }\n              { showFields && \n                <div className=\"textFieldSmallContainer\">\n                  <div className=\"backArrow\">\n                  </div>\n                  <div className=\"textFieldContainerSmall\">\n                  <div className=\"textFieldTags\">\n                    <img className=\"textFieldIcon\" src={UserIcon} />\n                    <div className=\"textFieldTitle\">Username *</div>\n                  </div>\n                  <TextField autoComplete=\"off\" className=\"textField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setUserName(e.target.value) } value={username}/>\n                  <div className=\"textFieldError2\">{usernameError.error && usernameError.message}</div>\n                </div>\n                  <div className=\"textFieldContainerSmall\">\n                  <div className=\"textFieldTags\">\n                  <img className=\"textFieldIcon\" src={LobbyIcon} />\n                    <div className=\"textFieldTitle\">Lobby Name *</div>\n                  </div>\n                  <TextField autoComplete=\"off\" className=\"textField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setLobbyName(e.target.value) } value={lobbyName}/>\n                  <div className=\"textFieldError2\">{lobbyError.error && lobbyError.message}</div>\n                </div>\n                  <div className=\"textFieldContainerSmall\">\n                  <div className=\"textFieldTags\">\n                    <img className=\"textFieldIcon\" src={PasswordIcon} />\n                    <div className=\"textFieldTitle\">Password</div>\n                  </div>\n                  <TextField autoComplete=\"off\" type=\"password\" className=\"textField\" color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setPassword(e.target.value) } value={password}/>\n                  <div className=\"textFieldError2\">{passwordError.error && passwordError.message}</div>\n                </div>  \n                  { showCreate && <Button className=\"createButtonSmall\" color=\"primary\" onClick={() => createGame()}> Create Game </Button> }\n                  { showJoin && <Button className=\"joinButtonSmall\" color=\"primary\" onClick={() => joinGame()}> Join Game </Button> }\n                </div>\n              }\n              \n            </div> \n\n            {!showFields && \n            <div className=\"createOrJoinSection\">\n              <div className=\"createJoin\"> \n                <div className=\"textFieldContainer\">\n                  <div className=\"textFieldTags\">\n                    <img className=\"textFieldIcon\" src={UserIcon} />\n                    <div className=\"textFieldTitle\">Username *</div>\n                  </div>\n                  <TextField autoComplete=\"off\" className=\"textField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setUserName(e.target.value) } value={username}/>\n                  <div className=\"textFieldError2\">{usernameError.error && usernameError.message}</div>\n                </div>\n                <div className=\"textFieldContainer\">\n                  <div className=\"textFieldTags\">\n                  <img className=\"textFieldIcon\" src={LobbyIcon} />\n                    <div className=\"textFieldTitle\">Lobby Name *</div>\n                  </div>\n                  <TextField autoComplete=\"off\" className=\"textField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setLobbyName(e.target.value) } value={lobbyName}/>\n                  <div className=\"textFieldError2\">{lobbyError.error && lobbyError.message}</div>\n                </div>\n                <div className=\"textFieldContainer\">\n                  <div className=\"textFieldTags\">\n                    <img className=\"textFieldIcon\" src={PasswordIcon} />\n                    <div className=\"textFieldTitle\">Password</div>\n                  </div>\n                  <TextField autoComplete=\"off\" type=\"password\" className=\"textField\" color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setPassword(e.target.value) } value={password}/>\n                  <div className=\"textFieldError2\">{passwordError.error && passwordError.message}</div>\n                </div>             \n                <div className=\"createJoinButtonsContainer\">\n                  <div style={{color: '#ecbebe', fontSize: \"14px\", minHeight: '18px', opacity: error ? '1' : '0', transition: 'opacity 0.5s'}}>{errorText}</div>}\n                  <Button className=\"createButton\" color=\"primary\" onClick={() => createGame()}> Create Game </Button>\n                  <Button className=\"joinButton\" color=\"primary\" onClick={() => joinGame()}> Join Game </Button>\n                </div>\n                \n                <div className=\"createJoinButtonsContainerSmall\">\n                  {error && <div style={{color: '#ecbebe', fontSize: \"14px\", minHeight: '18px', opacity: error ? '1' : '0', transition: 'opacity 0.5s'}}>{errorText}</div>}\n                  <Button className=\"createButton\" color=\"primary\" onClick={() => displayCreate()}> Create Game </Button>\n                  <Button className=\"joinButton\" color=\"primary\" onClick={() => displayJoin()}> Join Game </Button>\n                </div>\n                \n              </div>\n            </div>\n            }\n\n          </div>\n        }       \n  \n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/user.7de5e5f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/lobby.d10239bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.1b3f94dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.a2bcb8f5.svg\";"],"sourceRoot":""}