{"version":3,"sources":["Components/App.tsx","index.tsx","icons/user.svg","icons/lobby.svg","icons/password.svg","icons/question.svg"],"names":["socket","darkTheme","createMuiTheme","palette","type","App","useState","lobbyName","setLobbyName","username","setUserName","password","setPassword","playerInLobby","setPlayerInLobby","error","setError","errorText","setErrorText","gameOwner","setGameOwner","gameMembers","setGameMembers","gameWaitingRoom","setGameWaitingRoom","currentQuestion","setCurrentQuestion","questionAnswer","setQuestionAnswer","Boolean","gameInProgress","setGameInProgress","gameAnswers","setGameAnswers","questionIndex","setQuestionIndex","message","lobbyError","setLobbyError","usernameError","setUserNameError","passwordError","setPasswordError","showJoin","setShowJoin","showCreate","setShowCreate","showFields","setShowFields","useEffect","a","io","process","BASEURL","console","log","on","response","joined","members","waitingRoom","gameStarted","question","questionTable","map","i","answers","j","undefined","answer","setTimeout","setupSocket","window","addEventListener","innerWidth","location","hash","disconnectFromGame","hideCreateJoin","createGame","length","createGameCredentials","emit","joinGame","submitAnswer","ThemeProvider","theme","className","style","width","Fragment","TextField","autoComplete","required","color","variant","id","onChange","e","target","value","onKeyDown","keyCode","handleEnterSubmit","Button","margin","onClick","startGame","member","src","avatar","QuestionIcon","UserIcon","LobbyIcon","PasswordIcon","fontSize","minHeight","opacity","transition","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f588e8c7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {TextField, Button, Fab } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport io from 'socket.io-client';\nimport UserIcon from '../icons/user.svg';\nimport LobbyIcon from '../icons/lobby.svg';\nimport PasswordIcon from '../icons/password.svg';\nimport QuestionIcon from '../icons/question.svg';\nimport Avatar from 'avataaars';\nimport { randomAvatar } from '../randomav';\nimport { GameMembers } from './types';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\n\nlet socket : SocketIOClient.Socket;\n\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      PORT: string;\n      BASEURL: string;\n    }\n  }\n}\n\nfunction App() {\n  const [lobbyName, setLobbyName] = useState('');\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [playerInLobby, setPlayerInLobby] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n  const [gameOwner, setGameOwner] = useState('');\n  const [gameMembers, setGameMembers] = useState<GameMembers[]>([]);\n  const [gameWaitingRoom, setGameWaitingRoom] = useState<GameMembers[]>([]);\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const [questionAnswer, setQuestionAnswer] = useState('');\n  const [gameInProgress, setGameInProgress] = useState(Boolean);\n  const [gameAnswers, setGameAnswers] = useState<{ question: string, answer: string}[][]>([]);\n  const [questionIndex, setQuestionIndex ]= useState(0);\n\n  const [lobbyError, setLobbyError] = useState({error: false, message: ''});\n  const [usernameError, setUserNameError] = useState({error: false, message: ''});\n  const [passwordError, setPasswordError] = useState({error: false, message: ''});\n\n\n  const [showJoin, setShowJoin] = useState(false);\n  const [showCreate, setShowCreate] = useState(false);\n  const [showFields, setShowFields] = useState(false);\n\n  // Socket listener\n  useEffect(() => {\n    const setupSocket = async () => {\n      socket = io(process.env.BASEURL);\n      console.log(socket);\n  \n      \n      // If game created, hide the menu\n      socket.on('gameCreated', (response: {gameOwner: string, joined: boolean, members: GameMembers[]}) => {\n        if (response.joined) {\n          setPlayerInLobby(true);\n          setGameOwner(response.gameOwner);\n          setGameMembers(response.members);\n        }\n      })\n  \n      // on game join\n      socket.on('gameJoined', (response: {gameOwner: string, joined: boolean, members: GameMembers[], waitingRoom: GameMembers[]}) => {\n        if (response.joined) {\n          setPlayerInLobby(true);\n          setGameOwner(response.gameOwner);\n          setGameMembers(response.members)\n          setGameWaitingRoom(response.waitingRoom);\n        }\n      })\n  \n      // when player join update members\n      socket.on('playerJoined', (response : { members: GameMembers[], waitingRoom: GameMembers[]}) => {\n        setGameMembers(response.members);\n        setGameWaitingRoom(response.waitingRoom);\n      });\n  \n      // when game started\n      socket.on('gameStarted', (response: { gameStarted: boolean, question: string, questionIndex: number, members: GameMembers[], waitingRoom: GameMembers[] }) => {\n        setGameInProgress(response.gameStarted)\n        setCurrentQuestion(response.question);\n        setQuestionIndex(response.questionIndex);\n        setGameMembers(response.members);\n        setGameWaitingRoom(response.waitingRoom);\n      })\n  \n      socket.on('allQuestionsAnswered', (response: { question: string, answer: string}[][]) => {\n        console.log('all questions answered!')\n  \n        const questionTable: {question: string, answer: string}[][] = [];\n        response.map((question, i) => {\n          question.map((answers, j) => {\n            if (questionTable[j] === undefined) {\n              questionTable[j] = [];\n            }\n            questionTable[j][i] = {question: answers.question, answer: answers.answer}\n          })\n        })\n  \n        setGameAnswers(questionTable)\n        setGameInProgress(false);\n        setQuestionIndex(0);\n      });\n  \n      socket.on('newQuestion', (response: {question: string, questionIndex: number}) => {\n  \n        setCurrentQuestion(response.question);\n        setQuestionIndex(response.questionIndex);\n      })\n      \n      socket.on('playerLeft', (response : { members: GameMembers[], waitingRoom: GameMembers[]}) => {\n        setGameMembers(response.members);\n        setGameWaitingRoom(response.waitingRoom);\n      })\n\n      socket.on('validationError', (response: {error: string}) => {\n        setError(true);\n        setErrorText(response.error)\n        setTimeout(() => {\n          setError(false);\n        }, 3000);\n      })\n    }\n    setupSocket();\n  }, [])\n\n  // Deal with resize, to fix the garbage css\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth > 1270) {\n        setShowCreate(false);\n        setShowJoin(false);\n        setShowFields(false);\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n  }, []);\n\n  // Deal with hash change, hackfix back button phone\n  useEffect(() => {\n    const handleHashChange = () => {\n      if (window.location.hash === '') {\n        disconnectFromGame();\n        hideCreateJoin();\n      }\n    }\n\n    window.addEventListener('hashchange', handleHashChange);\n  }, []);\n\n  // Helpers for the buttons\n  const createGame = () => {\n    let error = false;\n\n    if (!lobbyName) {\n      setLobbyError({error:true, message: \"Lobby Name cannot be empty\"})\n      error = true;\n    } else {\n      setLobbyError({error:false, message: ''})\n    }\n    if (!username) {\n      setUserNameError({error:true, message: \"Username cannot be empty\"})\n      error = true;\n    } else if (username.length > 12) {\n      setUserNameError({error:true, message: \"Username maximum of 12 characters\"})\n      error = true;\n    } else  {\n      setUserNameError({error:false, message: ''})\n    }\n\n    if (error) {\n      return false;\n    }\n\n    setLobbyError({error: false, message: ''});\n    setUserNameError({error: false, message: ''});\n    setPasswordError({error: false, message: ''});\n    const createGameCredentials = { lobbyName, username, password };\n    console.log('trying')\n    socket.emit('createGame', createGameCredentials)\n    window.location.hash = lobbyName;\n  }\n  \n  const joinGame = () => {\n    let error = false;\n\n    if (!lobbyName) {\n      setLobbyError({error:true, message: \"Lobby Name cannot be empty\"})\n      error = true;\n    } else {\n      setLobbyError({error:false, message: ''})\n    }\n    if (!username) {\n      setUserNameError({error:true, message: \"Username cannot be empty\"})\n      error = true;\n    } else if (username.length > 12) {\n      setUserNameError({error:true, message: \"Username maximum of 12 characters\"})\n      error = true;\n    } {\n      setUserNameError({error:false, message: ''})\n    }\n\n    if (error) {\n      return false;\n    }\n\n    const createGameCredentials = { lobbyName, username, password };\n    socket.emit('joinGame', createGameCredentials)\n    window.location.hash = lobbyName;\n  }\n\n  const startGame = () => {\n    const createGameCredentials = { lobbyName, username };\n    socket.emit('startGame', createGameCredentials)\n  }\n\n  const handleEnterSubmit = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      submitAnswer()\n    }\n  }\n\n  const submitAnswer = () => {\n    if (questionAnswer === '') {\n      setError(true);\n      setErrorText('Answer cannot be empty you silly goose');\n      return false;\n    }\n\n    setError(false);\n    setErrorText('');\n    setQuestionAnswer('');\n    const createGameCredentials = { lobbyName, username, answer: questionAnswer };\n    socket.emit('submitAnswer', createGameCredentials)\n  }\n\n  const disconnectFromGame = () => {\n    socket.emit('leaveGame', {lobbyName})\n  }\n\n  const displayCreate = () => {\n    window.location.hash = '#createGame'\n    setShowCreate(true);\n    setShowFields(true);\n  }\n\n  const displayJoin = () => {\n    window.location.hash = '#joinGame'\n    setShowJoin(true);\n    setShowFields(true);\n  }\n\n  const hideCreateJoin = () => {\n    window.location.hash = ''\n    setShowCreate(false);\n    setShowJoin(false);\n    setShowFields(false);\n  }\n\n  \n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <div style={{width: \"100%\"}}>\n        { playerInLobby &&\n          <div className=\"gameLobby\">\n            { playerInLobby &&\n              <React.Fragment>\n                <div className=\"gameScreen\">\n                  <div className=\"gameScreenHeader\">\n                    <div className=\"gameScreenLogoContainer\">\n                      <div className=\"gameScreenLogo\">?!</div>\n                      Who<br/>What<br/>Where<br/>\n                    </div>\n                    <div className=\"gameScreenRound\">{questionIndex === 0 ? 'Waiting for new game' :'Round' }<br/>{questionIndex !== 0 ? questionIndex : ''}</div>\n                  </div>\n                  <div className=\"gameScreenContainer\">\n                      { (gameOwner !== username && !gameInProgress && playerInLobby) && \n                        <div className=\"waitingText\"> Waiting for {gameOwner} to start the game </div>\n                      }\n                      { (!gameInProgress && gameAnswers[0] !== undefined) &&\n                        <div>\n                          {gameAnswers.map((answer) => {\n                            return (\n                              <div>\n                              {answer.map((a) => {\n                                  return <li>{a.question} - {a.answer}</li>\n                              })}\n                              </div>\n                            )\n                          })}\n                          </div>    \n                      }\n                      { gameInProgress &&\n                        <React.Fragment>\n                          <div className=\"question\">{currentQuestion}</div>\n                          {error && <div>{errorText}</div>}\n                          <div className=\"answerContainer\"> \n                            <TextField autoComplete=\"off\" className=\"answerTextField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setQuestionAnswer(e.target.value) } value={questionAnswer} onKeyDown={(e) => handleEnterSubmit(e)}/>\n                            <Button className=\"submitAnswerButton\" style={{margin: '4px'}} color=\"primary\" onClick={() => submitAnswer()}> Submit </Button>\n                          </div>\n                        </React.Fragment>\n                      }\n                      { (gameOwner !== '' && gameOwner === username && !gameInProgress) && \n                      <div className=\"startButtonContainer\">\n                      <Button className=\"startButton\" color=\"primary\" onClick={() => startGame()}> Start Game </Button>\n                      </div>\n                      }\n                  </div>\n                  <div className=\"gameScreenChatContainer\">\n                    \n                  </div>\n                </div>\n                <div className=\"memberSidebar\">\n                  <div className=\"memberSidebarTitle\">Players - {gameMembers.length}</div>\n                  <div className=\"memberList\">\n                    {gameMembers.map((member) => {\n                      return (\n                        <div className=\"memberItem\"><img className=\"memberAvatar\" src={member.avatar}/>{member.username}</div>\n                      )\n                    })}\n                  </div>\n                  <div className=\"waitingRoomSidebarTitle\">Waiting Room - {gameWaitingRoom.length}</div>\n                  <div className=\"waitingRoomList\">\n                    {gameWaitingRoom.map((member) => {\n                      return (\n                        <div className=\"memberItem\"><img className=\"memberAvatar\" src={member.avatar}/>{member.username}</div>\n                      )\n                    })}\n                  </div>\n                </div>\n              </React.Fragment>\n            }\n          </div>\n        }\n\n        { !playerInLobby &&\n          <div className=\"createOrJoinLobbyContainer\">\n\n            <div className=\"introductionSection\"> \n              <div className=\"introTitleContainer\">\n                <img className=\"introIcon\" src={QuestionIcon} />\n                <div className=\"introTitle\">Who What Where</div>\n              </div>\n              { showFields && <div className=\"dividerSmall\"></div> }\n              { !showFields &&\n              <React.Fragment>\n              <div className=\"introContent\"> \n                An Interactive Story building game to play with friends. <br/><br/>\n                Challenge your friends to a game of Who, What, Where? An Ad-libs inspired interactive story building game \n                where you and your friends answer a series of 9 questions. The answers get mashed together to create wild stories. <br/><br/>\n                <div className=\"extraPlayerText\">Best played with 3-9 players </div>\n              </div>\n              <div className=\"divider\"></div>\n              </React.Fragment>\n              }\n              { showFields && \n                <div className=\"textFieldSmallContainer\">\n                  <div className=\"backArrow\">\n                  </div>\n                  <form autoComplete=\"off\">\n                  <div className=\"textFieldContainerSmall\">\n                  <div className=\"textFieldTags\">\n                    <img className=\"textFieldIcon\" src={UserIcon} />\n                    <div className=\"textFieldTitle\">Username *</div>\n                  </div>\n                  <TextField autoComplete=\"off\" className=\"textField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setUserName(e.target.value) } value={username}/>\n                  <div className=\"textFieldError2\">{usernameError.error && usernameError.message}</div>\n                </div>\n                  <div className=\"textFieldContainerSmall\">\n                  <div className=\"textFieldTags\">\n                  <img className=\"textFieldIcon\" src={LobbyIcon} />\n                    <div className=\"textFieldTitle\">Lobby Name *</div>\n                  </div>\n                  <TextField autoComplete=\"off\" className=\"textField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setLobbyName(e.target.value) } value={lobbyName}/>\n                  <div className=\"textFieldError2\">{lobbyError.error && lobbyError.message}</div>\n                </div>\n                  <div className=\"textFieldContainerSmall\">\n                  <div className=\"textFieldTags\">\n                    <img className=\"textFieldIcon\" src={PasswordIcon} />\n                    <div className=\"textFieldTitle\">Password</div>\n                  </div>\n                  <TextField autoComplete=\"off\" type=\"password\" className=\"textField\" color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setPassword(e.target.value) } value={password}/>\n                  <div className=\"textFieldError2\">{passwordError.error && passwordError.message}</div>\n                </div>  \n                  </form>\n                  { showCreate && <Button className=\"createButtonSmall\" color=\"primary\" onClick={() => createGame()}> Create Game </Button> }\n                  { showJoin && <Button className=\"joinButtonSmall\" color=\"primary\" onClick={() => joinGame()}> Join Game </Button> }\n                </div>\n              }\n              \n            </div> \n\n            {!showFields && \n            <div className=\"createOrJoinSection\">\n              <div className=\"createJoin\"> \n                <form autoComplete=\"off\">\n                <div className=\"textFieldContainer\">\n                  <div className=\"textFieldTags\">\n                    <img className=\"textFieldIcon\" src={UserIcon} />\n                    <div className=\"textFieldTitle\">Username *</div>\n                  </div>\n                  <TextField autoComplete=\"off\" className=\"textField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setUserName(e.target.value) } value={username}/>\n                  <div className=\"textFieldError2\">{usernameError.error && usernameError.message}</div>\n                </div>\n                <div className=\"textFieldContainer\">\n                  <div className=\"textFieldTags\">\n                  <img className=\"textFieldIcon\" src={LobbyIcon} />\n                    <div className=\"textFieldTitle\">Lobby Name *</div>\n                  </div>\n                  <TextField autoComplete=\"off\" className=\"textField\" required color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setLobbyName(e.target.value) } value={lobbyName}/>\n                  <div className=\"textFieldError2\">{lobbyError.error && lobbyError.message}</div>\n                </div>\n                <div className=\"textFieldContainer\">\n                  <div className=\"textFieldTags\">\n                    <img className=\"textFieldIcon\" src={PasswordIcon} />\n                    <div className=\"textFieldTitle\">Password</div>\n                  </div>\n                  <TextField autoComplete=\"off\" type=\"password\" className=\"textField\" color=\"primary\" variant=\"outlined\" id=\"standard-basic\" onChange={(e) => setPassword(e.target.value) } value={password}/>\n                  <div className=\"textFieldError2\">{passwordError.error && passwordError.message}</div>\n                </div>             \n                </form>\n                <div className=\"createJoinButtonsContainer\">\n                  <div style={{color: '#ecbebe', fontSize: \"14px\", minHeight: '18px', opacity: error ? '1' : '0', transition: 'opacity 0.5s'}}>{errorText}</div>}\n                  <Button className=\"createButton\" color=\"primary\" onClick={() => createGame()}> Create Game </Button>\n                  <Button className=\"joinButton\" color=\"primary\" onClick={() => joinGame()}> Join Game </Button>\n                </div>\n            \n                <div className=\"createJoinButtonsContainerSmall\">\n                  {error && <div style={{color: '#ecbebe', fontSize: \"14px\", minHeight: '18px', opacity: error ? '1' : '0', transition: 'opacity 0.5s'}}>{errorText}</div>}\n                  <Button className=\"createButton\" color=\"primary\" onClick={() => displayCreate()}> Create Game </Button>\n                  <Button className=\"joinButton\" color=\"primary\" onClick={() => displayJoin()}> Join Game </Button>\n                </div>\n                \n              </div>\n            </div>\n            }\n\n          </div>\n        }       \n  \n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/user.7de5e5f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/lobby.d10239bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.1b3f94dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.a2bcb8f5.svg\";"],"sourceRoot":""}